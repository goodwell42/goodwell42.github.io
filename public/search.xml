<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[建模算法分类]]></title>
    <url>%2F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%2F%E7%AE%97%E6%B3%95%2F%E5%BB%BA%E6%A8%A1%E7%AE%97%E6%B3%95%E5%88%86%E7%B1%BB%2F</url>
    <content type="text"><![CDATA[算法分类美赛培训第一天 下午 关于数学建模中算法的简单分类 一、预测1. 灰色预测样本点6-15个 数据呈指数或曲线形式 2. 微分方程预测无法找到原始数据的关系，但可以找到原始数据变化速度的关系，通过公式推导转化为原始数据的关系 3. 回归分析预测求一个因变量与若干自变量之间的关系，若自变量变化因变量如何变化自变量之间协方差比较小，最好趋近于0，自变量相关性小；样本点个数n&gt;3k+1，k为自变量个数因变量要符合正态分布 4. 马尔可夫预测一个序列之间没有信息的传递，前后没有联系，数据之间随机性强，相互不影响 （每天的温度没有直接联系，预测温度高低的概率）只能得到概率 5. 时间序列预测与马尔可夫预测互补，至少两个点需要信息传递，ARMA模型、周期模型、季节模型等 6. 小波分析海量数据 无规律 将波分离，分离处出周期数据、规律性数据 可以做出时间序列做不出的数据，应用范围较广（高大上） 7. 神经网络预测大量数据 不需模型 只需输入输出 黑箱处理（检验、对照分析） 二、评价与决策1. 模糊综合评价评价一个对象 2. 主成分分析评价多个对象的水平并排序，指标见关联性很强 3. 数据包络分析优化问题，对各省发展状况进行评判 4. 秩和比综合评价同主成分分析，但指标间关联性不强 5. TOPSIS6. 投影寻踪综合评价法柔和多种算法（遗传算法、最优化理论等） 三、分析1. 方差分析看几类数据之间有无差异，差异性影响 2. 协方差分析有几个因素，只考虑一个因素对问题的影响，忽略其他因素 四、分类与判别1. 距离聚类（系统距离） 2. 关联性聚类（Q聚类 R聚类） 3. 层次聚类4. 密度聚类5. 其他聚类6. 贝叶斯判别（统计判别方法） 7. 费舍尔判别（训练样本较多） 8. 模糊识别（分好类的数据点较少） 五、关联与因果六、优化与控制1. 线性规划、整数规划、0-1规划（有约束、确定的目标） 2. 非线性规划与智能优化算法3. 多目标规划和目标规划（柔性约束、目标含糊、超过） 七、动态规划1. 网络优化（多因素交错复杂） 2. 排队论与计算机仿真3. 模糊规划（范围约束） 4. 灰色规划（难）]]></content>
      <categories>
        <category>数学建模</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>数学建模</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[美赛事项]]></title>
    <url>%2F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%2F%E7%BE%8E%E8%B5%9B%2F%E7%BE%8E%E8%B5%9B%E4%BA%8B%E9%A1%B9%2F</url>
    <content type="text"><![CDATA[美国大学生数学建模竞赛美赛培训第一天 上午 关于美赛的一些小提示和注意事项 一、注意事项1.报名缴费报名必须visa和master卡 2.赛题分为六道题-MCM：ABC-ICM：DEF 二、论文要求-1. 摘要要求高 -2. 结构，格式 -3. 图表，公式 -4. 做一个框图 -5. 简洁性和结构性 -6. 主要结论体现主旨和结果 三、大致模块-1. 适当简化或重述问题（一页）可以添加图片形象描述题目 -2. 明确假设5-6，阐述变量8-9，猜想 -3. 模型 建立，分析 -4. 测试 -5. 总结模型或方法优缺点 四、论文格式 字体至少12号，不能出现汉字（图表中务必注意） 页顶，都需要控制号和页码 五、经验 30%参考文献 -CNKI翻译 -读秀 30%靠建模资源 30%论文写作 10% 三个层次 搬运工 泥瓦匠 设计师]]></content>
      <categories>
        <category>数学建模</category>
        <category>美赛</category>
      </categories>
      <tags>
        <tag>数学建模</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爬虫分析 Java 岗位招聘情况]]></title>
    <url>%2FSpider%2Fanalysis%2F%E7%88%AC%E8%99%AB%E5%88%86%E6%9E%90-Java-%E5%B2%97%E4%BD%8D%E6%8B%9B%E8%81%98%E6%83%85%E5%86%B5%2F</url>
    <content type="text"><![CDATA[智联招聘Java 岗位招聘信息为了知道现在的 Java 开发的岗位招聘，公司们需要什么样的人才？要有什么样的技能？以及对应的市场如何？ 趁着这次课程设计，我有了一个“大”胆的想法。 利用Jsoup与gson库编写Java代码，爬取了智联招聘上 Java开发 关键字的招聘岗位近 90×625 = 56250 条招聘信息，选取 top5786 条招聘岗位带 Java 关键字的招聘信息进行数据分析。 主要对抓取到的以下16个方面数据进行分析： 信息发布 企业信息 招聘信息 招聘发布时间 企业名称 工作地点 招聘结束时间 企业类型 工作类型 最新更新时间 公司规模 工作职位 搜索标签 企业信息介绍 薪资 职业类型 公司福利 学历要求 工作经验要求 1详细信息页面、企业名称、企业类型、公司规模、企业信息介绍、工作地点、工作类型、工作职位、搜索标签、薪资、学历要求、工作经验要求、职业类型、公司福利 岗位分布先上两个图，把全部招聘工作地数据标记在符号地图上的效果如下，圆饼大小表示数量： 筛选出发布招聘岗位最多的地区，如下： 整理出来的表格： 地区 招聘数 北京 995 上海 486 深圳 340 南京 290 广州 241 成都 224 杭州 202 武汉 194 郑州 191 大连 184 济南 183 西安 169 长沙 164 5K多条招聘信息中出现超过150次的地区：显然北京995 是最多的，接近1K，上海 486 排在第二，深圳340排在第三，两者都超过了 300，北上广深，江浙沪都十分多。因为我是南方人（去过的最北方就是长沙），对北方不是很熟悉，大连，济南，西安都超过了150。当然数据只是针对这前 5786 条数据而言！见微知著总体上也差不多。 职位情况然后对职位进行分析，这个问题让我头可疼可疼了呢，因为没有一个规范，导致招聘信息上的职位写的是各式各样，举个例子吧。Java 高级开发工程师和高级 Java 开发工程师是一个意思吧。Java 开发工程师，Java开发工程师，JAVA 工程师这三是一个概念吧。有的甚至写着 JAVA 攻城师？？？以为自己萌萌哒？？？ 这样统计起来也比较麻烦，找不到好办法，只能先进行词频统计，然后剩下的再进行手动归类。最终被我归为 20 个类别。 通过词云可以看出企业提供的职位大多为JAVA开发工程师。 岗位要求提取了所有的职位要求，进行分词统计，清理没意义的词，统一英文字符，如 Java 和 java 不区分大小。 提取前 50 个中文词汇以及出现次数 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758开发,2100熟悉,1842经验,1268工程师,897工作,895职位,842能力,806优先,755描述,753软件,682技术,677负责,660职能,658类别,654设计,562系统,559要求,549相关,542使用,529良好,521以上,502框架,492数据库,491项目,429团队,424了解,398数据,387产品,352熟练,349精通,331公司,321任职,313进行,311编程,309平台,306学习,301语言,300具备,300岗位职责,296沟通,292代码,284互联网,280具有,269参与,263分析,262维护,253优化,239编写,235爬虫,233学历,230文档,226合作,219软件开发,218高级,213常用,212测试,205需求,205完成,200 这个词频排序挺有趣的，要来好好研究一下 （开发,2100）（熟悉，1842）（经验，1268），这是最多的三个。熟悉其实也就是相当于有经验了。表示程度上的词也是频频出现（熟悉,1842）（良好,521）（熟练,349）（精通,331）。其实我一直不太理解精通这个词，什么程度上的熟练才能称为精通。个人感觉应该对精通这个词怀有敬畏之心。（团队,424）（参与,263）（合作,219）（沟通,292）（协作,108），这个更多的是强调团队开发，参与到团队开发以及合作的重要性，毕竟现在的项目的规模基本上已经大到不是一个人就能完成的。顺便提一下 Git 出现了刚好 100 次。（分析,262）（维护,253）（优化,239），这三个词应该就是对个人能力的综合描述了，具有分析问题的能力，维护和优化项目的能力，一个成熟的项目后期的维护和优化是很重要的。 看看没排进 top50 的其他词汇（专业,199）（架构,173）（研发,170），这几个词看起来就厉害了，毕竟架构这个不是随便就能搞搞。（爬虫,233）（抓取,140）（爬取,28）（正则表达式,31），刚需刚需！！！（独立,153）（责任心,123）（强烈,69）（踏实,26）（抗压,17）（认真,26）（热爱,53）（意识,78）（逻辑,58）这应该都是所要求的品质和能力了吧。（数据结构,106）（算法,198）（设计模式,33）回忆起了被《数据结构》和《算法导论》统治的恐惧吗？（分布式,97）（分布式系统,29）（分布式计算,7）用心感受一下就行了。（开源,112），（Github,29）这个也可以看出公司对开源的这方面的重视了，这是一种学习能力的体现，也是对程序和代码的热爱。了解这个也能大概证明自己不是一个只会闭门造车的人。 薪酬情况 可以看出工作类型为全职的薪资水平相较于其他三种高。 学历要求 可以看出这些公司招聘主要是面向本科与大专学历的求职人员。 其他 工作经验与职位的词云。 博主正在努力更新中，未完待续＞＞＞ 总结详细请跳转网页全国Java开发招聘信息.]]></content>
      <categories>
        <category>Spider</category>
        <category>analysis</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[employ_info]]></title>
    <url>%2FJava%2FSpider%2Femploy-info%2F</url>
    <content type="text"><![CDATA[爬虫分析 Java 岗位招聘情况现在的 Java 开发的岗位招聘，公司们需要什么样的人才？要有什么样的技能？以及对应的市场如何？ 所以，我有了一个“大”胆的想法。 利用Jsoup与gson库编写Java代码，爬取了智联招聘上 Java开发 关键字的招聘岗位近 90×625 = 56250 条招聘信息，选取 top5786 条招聘岗位带 Java 关键字的招聘信息进行数据分析。主要对抓取到的以下16个方面信息进行分析： 信息发布 企业信息 招聘信息 招聘发布时间 企业名称 工作地点 招聘结束时间 企业类型 工作类型 最新更新时间 公司规模 工作职位 搜索标签 企业信息介绍 薪资 职业类型 公司福利 学历要求 工作经验要求 详细信息页面、企业名称、企业类型、公司规模、企业信息介绍、工作地点、工作类型、工作职位、搜索标签、薪资、学历要求、工作经验要求、职业类型、公司福利 岗位分布全部数据标记在符号地图上的效果如下，圆饼大小表示数量： 筛选出发布招聘岗位最多的地区，如下： 整理出来的表格如下： 地区 招聘数 北京 995 上海 486 深圳 340 南京 290 广州 241 成都 224 杭州 202 武汉 194 郑州 191 大连 184 济南 183 西安 169 长沙 164 5K多条招聘信息中出现超过150次的地区：显然北京995 是最多的，接近1K，上海 486 排在第二，深圳340排在第三，两者都超过了 300，北上广深，江浙沪都十分多。因为我是南方人（去过的最北方就是长沙），对北方不是很熟悉，大连，济南，西安都超过了150。当然数据只是针对这前 5786 条数据而言！见微知著总体上也差不多。 职位要求提取了所有的职位要求，进行分词统计，清理没意义的词，统一英文字符，如 Java 和 java 不区分大小。 提取前 50 个中文词汇以及出现次数 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758开发,2100熟悉,1842经验,1268工程师,897工作,895职位,842能力,806优先,755描述,753软件,682技术,677负责,660职能,658类别,654设计,562系统,559要求,549相关,542使用,529良好,521以上,502框架,492数据库,491项目,429团队,424了解,398数据,387产品,352熟练,349精通,331公司,321任职,313进行,311编程,309平台,306学习,301语言,300具备,300岗位职责,296沟通,292代码,284互联网,280具有,269参与,263分析,262维护,253优化,239编写,235爬虫,233学历,230文档,226合作,219软件开发,218高级,213常用,212测试,205需求,205完成,200 这个词频排序挺有趣的，要来好好研究一下 （开发,2100）（熟悉，1842）（经验，1268），这是最多的三个。熟悉其实也就是相当于有经验了。表示程度上的词也是频频出现（熟悉,1842）（良好,521）（熟练,349）（精通,331）。其实我一直不太理解精通这个词，什么程度上的熟练才能称为精通。个人感觉应该对精通这个词怀有敬畏之心。（团队,424）（参与,263）（合作,219）（沟通,292）（协作,108），这个更多的是强调团队开发，参与到团队开发以及合作的重要性，毕竟现在的项目的规模基本上已经大到不是一个人就能完成的。顺便提一下 Git 出现了刚好 100 次。（分析,262）（维护,253）（优化,239），这三个词应该就是对个人能力的综合描述了，具有分析问题的能力，维护和优化项目的能力，一个成熟的项目后期的维护和优化是很重要的。 看看没排进 top50 的其他词汇（专业,199）（架构,173）（研发,170），这几个词看起来就厉害了，毕竟架构这个不是随便就能搞搞。（爬虫,233）（抓取,140）（爬取,28）（正则表达式,31），刚需刚需！！！（独立,153）（责任心,123）（强烈,69）（踏实,26）（抗压,17）（认真,26）（热爱,53）（意识,78）（逻辑,58）这应该都是所要求的品质和能力了吧。（数据结构,106）（算法,198）（设计模式,33）回忆起了被《数据结构》和《算法导论》统治的恐惧吗？（分布式,97）（分布式系统,29）（分布式计算,7）用心感受一下就行了。（开源,112），（Github,29）这个也可以看出公司对开源的这方面的重视了，这是一种学习能力的体现，也是对程序和代码的热爱。了解这个也能大概证明自己不是一个只会闭门造车的人。 薪酬情况 学历情况 可以看出这些公司招聘主要是面向本科与大专学历的求职人员。 职位情况然后对职位进行分析，这个问题让我头可疼可疼了呢，因为没有一个规范，导致招聘信息上的职位写的是各式各样，举个例子吧。Java 高级开发工程师和高级 Java 开发工程师是一个意思吧。Java 开发工程师，Java开发工程师，JAVA 工程师这三是一个概念吧。有的甚至写着 JAVA 攻城师？？？以为自己萌萌哒？？？ 这样统计起来也比较麻烦，找不到好办法，只能先进行词频统计，然后剩下的再进行手动归类。最终被我归为 20 个类别。 企业提供的职位大多为JAVA开发工程师 工作经验与职位的词云。 总结详细请跳转网页全国Java开发招聘信息.]]></content>
      <categories>
        <category>Java</category>
        <category>Spider</category>
      </categories>
      <tags>
        <tag>Spider</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[goodwell的第一篇博文]]></title>
    <url>%2F%E5%9B%9E%E6%94%B6%E7%AB%99%2Ftest1%2Fgoodwell%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87%2F</url>
    <content type="text"><![CDATA[Markdown语法1.标题的设置（几级标题就使用几个“#”） 标题1: 啦啦啦标题2：嘻嘻嘻2.段落和换行段落：使用空行隔开自动换行：结尾使用两个 空格 3.简单字体设置（插件快捷键）粗体：在 ** ** 之间输入（Ctrl+B）eg：这很 粗斜体：在 _ _ 或者 * * 之间输入（Ctrl+I）eg：这很 _斜_删除线：在 ~~ ~~ 之间输入（Alt+S）eg：这很 多余PS: 支持嵌套使用这很粗、但是斜、所以很多余 4.引用使用“&gt;”即可 test 5.代码单行：在 ` ` 之间输入command多行：在 \之间输入12 code block` 6.列表有序：number+dot（半角）eg：1.啦啦啦2.嘻嘻嘻3.嘿嘿嘿无序：单个 +或-或*-啦啦啦-嘻嘻嘻-嘿嘿嘿 7.链接小括号（链接），中括号（带title属性）eg:This is an example link.(https://goodwell42.github.io)eg:This is an example link. 8.分割线使用 *** 或 --- 9.页眉分割线10.插入图片![title](图片的外链地址)eg: 11.插入音乐关忆北 12.LaTeX公式编辑]]></content>
      <categories>
        <category>回收站</category>
        <category>test1</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RTFSC启示]]></title>
    <url>%2Funcategorized%2FRTFSC%E5%90%AF%E7%A4%BA%2F</url>
    <content type="text"><![CDATA[123456789101112131415- RTFSC(Read the fucking source code) - RTFM(Read the fucking manual) - UTFH (“Use The Fucking Help”) - STFW (“Search The Fucking Web”) - STFG (“Search The Fucking Google” or “Search The Fantastic Google”) - GIYF (“Google Is Your Friend”) - JFGI (“Just Fucking Google It”) - UTSL (“Use The Source Luke”—alternately, RTFS) - RTFA (“Read The Fucking Article”—common on news forums such as Fark.com[3] and Slashdot) - RTFE (“Read The Fucking Email”) - RTFC (“Read The Fucking Code,” or “Reboot The Fucking Computer”) - RTFQ (“Read The Fucking Question”) - LMGTFY (“Let Me Google That For You”) - WIDGI (“When In Doubt Google It” - Also occasionally ‘WIDGIT’) - FIOTI (“Find It On The Internet”)]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[goodwellTest]]></title>
    <url>%2F%E5%9B%9E%E6%94%B6%E7%AB%99%2Ftest1%2FgoodwellTest%2F</url>
    <content type="text"><![CDATA[##Markdown语法 ###1.标题的设置（几级标题就使用几个“#”） #标题1: 啦啦啦 ##标题2：嘻嘻嘻 ###2.段落和换行段落：使用空行隔开自动换行：结尾使用两个 空格 ###3.简单字体设置（插件快捷键）粗体：在 ** ** 之间输入（Ctrl+B）eg：这很 粗斜体：在 _ _ 或者 * * 之间输入（Ctrl+I）eg：这很 _斜_删除线：在 ~~ ~~ 之间输入（Alt+S）eg：这很 多余PS: 支持嵌套使用这很粗、但是斜、所以很多余 ###4.引用使用“&gt;”即可 test ###5.代码单行：在 ` ` 之间输入command多行：在 \之间输入12 code block` ###6.列表有序：number+dot（半角）eg：1.啦啦啦2.嘻嘻嘻3.嘿嘿嘿无序：单个 +或-或*-啦啦啦-嘻嘻嘻-嘿嘿嘿 ###7.链接小括号（链接），中括号（带title属性）eg:This is an example link.(https://goodwell42.github.io)eg:This is an example link. ###8.分割线使用 *** 或 --- ###9.页眉分割线 ###10.插入图片![title](图片的外链地址)eg: ###11.插入音乐关忆北 ###11.LaTeX公式编辑]]></content>
      <categories>
        <category>回收站</category>
        <category>test1</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F%E5%9B%9E%E6%94%B6%E7%AB%99%2Ftest2%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>回收站</category>
        <category>test2</category>
      </categories>
  </entry>
</search>
